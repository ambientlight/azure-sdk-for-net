// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.WFS.Models
{
    public partial class GeoJsonFeatureCollection
    {
        internal static GeoJsonFeatureCollection DeserializeGeoJsonFeatureCollection(JsonElement element)
        {
            if (element.TryGetProperty("type", out JsonElement discriminator))
            {
                switch (discriminator.GetString())
                {
                    case "FeatureCollection": return ExtendedGeoJsonFeatureCollection.DeserializeExtendedGeoJsonFeatureCollection(element);
                }
            }
            IReadOnlyList<GeoJsonFeature> features = default;
            GeoJsonObjectType type = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("features"))
                {
                    List<GeoJsonFeature> array = new List<GeoJsonFeature>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(GeoJsonFeature.DeserializeGeoJsonFeature(item));
                    }
                    features = array;
                    continue;
                }
                if (property.NameEquals("type"))
                {
                    type = new GeoJsonObjectType(property.Value.GetString());
                    continue;
                }
            }
            return new GeoJsonFeatureCollection(type, features);
        }
    }
}
