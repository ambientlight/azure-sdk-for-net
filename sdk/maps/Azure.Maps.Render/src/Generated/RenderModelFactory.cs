// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Maps.Render.Models;

namespace Azure.Maps.Render
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class RenderModelFactory
    {
        /// <summary> Initializes new instance of GetCopyrightCaptionResult class. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="copyrightsCaption"> Copyrights Caption property. </param>
        /// <returns> A new <see cref="Models.GetCopyrightCaptionResult"/> instance for mocking. </returns>
        public static GetCopyrightCaptionResult GetCopyrightCaptionResult(string formatVersion = default, string copyrightsCaption = default)
        {
            return new GetCopyrightCaptionResult(formatVersion, copyrightsCaption);
        }

        /// <summary> Initializes new instance of GetCopyrightFromBoundingBoxResult class. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="generalCopyrights"> General Copyrights array. </param>
        /// <param name="regions"> Regions array. </param>
        /// <returns> A new <see cref="Models.GetCopyrightFromBoundingBoxResult"/> instance for mocking. </returns>
        public static GetCopyrightFromBoundingBoxResult GetCopyrightFromBoundingBoxResult(string formatVersion = default, IReadOnlyList<string> generalCopyrights = default, IReadOnlyList<RegionCopyrights> regions = default)
        {
            generalCopyrights ??= new List<string>();
            regions ??= new List<RegionCopyrights>();
            return new GetCopyrightFromBoundingBoxResult(formatVersion, generalCopyrights, regions);
        }

        /// <summary> Initializes new instance of RegionCopyrights class. </summary>
        /// <param name="copyrights"> Copyrights array. </param>
        /// <param name="country"> Country property. </param>
        /// <returns> A new <see cref="Models.RegionCopyrights"/> instance for mocking. </returns>
        public static RegionCopyrights RegionCopyrights(IReadOnlyList<string> copyrights = default, RegionCopyrightsCountry country = default)
        {
            copyrights ??= new List<string>();
            return new RegionCopyrights(copyrights, country);
        }

        /// <summary> Initializes new instance of RegionCopyrightsCountry class. </summary>
        /// <param name="iSO3"> ISO3 property. </param>
        /// <param name="label"> Label property. </param>
        /// <returns> A new <see cref="Models.RegionCopyrightsCountry"/> instance for mocking. </returns>
        public static RegionCopyrightsCountry RegionCopyrightsCountry(string iSO3 = default, string label = default)
        {
            return new RegionCopyrightsCountry(iSO3, label);
        }

        /// <summary> Initializes new instance of GetCopyrightForTileResult class. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="generalCopyrights"> General Copyrights array. </param>
        /// <param name="regions"> Regions array. </param>
        /// <returns> A new <see cref="Models.GetCopyrightForTileResult"/> instance for mocking. </returns>
        public static GetCopyrightForTileResult GetCopyrightForTileResult(string formatVersion = default, IReadOnlyList<string> generalCopyrights = default, IReadOnlyList<RegionCopyrights> regions = default)
        {
            generalCopyrights ??= new List<string>();
            regions ??= new List<RegionCopyrights>();
            return new GetCopyrightForTileResult(formatVersion, generalCopyrights, regions);
        }

        /// <summary> Initializes new instance of GetCopyrightForWorldResult class. </summary>
        /// <param name="formatVersion"> Format Version property. </param>
        /// <param name="generalCopyrights"> General Copyrights array. </param>
        /// <param name="regions"> Regions array. </param>
        /// <returns> A new <see cref="Models.GetCopyrightForWorldResult"/> instance for mocking. </returns>
        public static GetCopyrightForWorldResult GetCopyrightForWorldResult(string formatVersion = default, IReadOnlyList<string> generalCopyrights = default, IReadOnlyList<RegionCopyrights> regions = default)
        {
            generalCopyrights ??= new List<string>();
            regions ??= new List<RegionCopyrights>();
            return new GetCopyrightForWorldResult(formatVersion, generalCopyrights, regions);
        }
    }
}
