// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using Azure.Maps.FeatureState.Models;

namespace Azure.Maps.FeatureState
{
    /// <summary> Model factory for read-only models. </summary>
    public static partial class MapsFeaturestateModelFactory
    {
        /// <summary> Initializes new instance of StatesetCreatedResponse class. </summary>
        /// <param name="statesetId"> The ID for the new stateset created. </param>
        /// <returns> A new <see cref="Models.StatesetCreatedResponse"/> instance for mocking. </returns>
        public static StatesetCreatedResponse StatesetCreatedResponse(string statesetId = default)
        {
            return new StatesetCreatedResponse(statesetId);
        }

        /// <summary> Initializes new instance of StatesetInfoObject class. </summary>
        /// <param name="statesetId"> The stateset ID of this stateset. </param>
        /// <param name="description"> Description associated with the stateset. </param>
        /// <param name="datasetIds"> Dataset ID associated with the stateset. </param>
        /// <param name="statesetStyle"> The styles model. </param>
        /// <returns> A new <see cref="Models.StatesetInfoObject"/> instance for mocking. </returns>
        public static StatesetInfoObject StatesetInfoObject(string statesetId = default, string description = default, IReadOnlyList<string> datasetIds = default, StylesObject statesetStyle = default)
        {
            datasetIds ??= new List<string>();
            return new StatesetInfoObject(statesetId, description, datasetIds, statesetStyle);
        }

        /// <summary> Initializes new instance of StatesetGetResponse class. </summary>
        /// <param name="description"> Description associated with the stateset. </param>
        /// <param name="datasetIds"> Dataset ID associated with the stateset. </param>
        /// <param name="statesetStyle"> The styles model. </param>
        /// <returns> A new <see cref="Models.StatesetGetResponse"/> instance for mocking. </returns>
        public static StatesetGetResponse StatesetGetResponse(string description = default, IReadOnlyList<string> datasetIds = default, StylesObject statesetStyle = default)
        {
            datasetIds ??= new List<string>();
            return new StatesetGetResponse(description, datasetIds, statesetStyle);
        }
    }
}
