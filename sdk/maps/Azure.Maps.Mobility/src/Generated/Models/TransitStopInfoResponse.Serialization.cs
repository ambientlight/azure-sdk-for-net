// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Mobility.Models
{
    public partial class TransitStopInfoResponse
    {
        internal static TransitStopInfoResponse DeserializeTransitStopInfoResponse(JsonElement element)
        {
            Optional<LegStop> stop = default;
            Optional<IReadOnlyList<ItineraryLine>> lines = default;
            Optional<IReadOnlyList<ItineraryLineGroup>> lineGroups = default;
            Optional<IReadOnlyList<AlertInformation>> alerts = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("stop"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    stop = LegStop.DeserializeLegStop(property.Value);
                    continue;
                }
                if (property.NameEquals("lines"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ItineraryLine> array = new List<ItineraryLine>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ItineraryLine.DeserializeItineraryLine(item));
                    }
                    lines = array;
                    continue;
                }
                if (property.NameEquals("lineGroups"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ItineraryLineGroup> array = new List<ItineraryLineGroup>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ItineraryLineGroup.DeserializeItineraryLineGroup(item));
                    }
                    lineGroups = array;
                    continue;
                }
                if (property.NameEquals("alerts"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<AlertInformation> array = new List<AlertInformation>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(AlertInformation.DeserializeAlertInformation(item));
                    }
                    alerts = array;
                    continue;
                }
            }
            return new TransitStopInfoResponse(stop.Value, Optional.ToList(lines), Optional.ToList(lineGroups), Optional.ToList(alerts));
        }
    }
}
