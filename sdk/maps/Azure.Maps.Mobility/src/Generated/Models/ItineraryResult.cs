// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using Azure.Core;

namespace Azure.Maps.Mobility.Models
{
    /// <summary> The ItineraryResult. </summary>
    public partial class ItineraryResult
    {
        /// <summary> Initializes a new instance of ItineraryResult. </summary>
        internal ItineraryResult()
        {
            Legs = new ChangeTrackingList<RouteItineraryLeg>();
        }

        /// <summary> Initializes a new instance of ItineraryResult. </summary>
        /// <param name="itineraryId"> A unique identifier of the returned itinerary. </param>
        /// <param name="departureTime"> The date and time of departure from the origin point in ISO 8601 format, e.g. 1996-12-19T16:39:57-08:00. </param>
        /// <param name="arrivalTime"> The date and time of arrival at the destination point in ISO 8601 format, e.g. 1996-12-19T19:39:57-08:00. </param>
        /// <param name="travelTimeInSeconds"> Estimated travel time in seconds. </param>
        /// <param name="numberOfLegs"> Number of legs. </param>
        /// <param name="legs"> An array summarizing the legs of this itinerary. </param>
        /// <param name="itineraryFare"> Itinerary level transit fare information. Returned only if fare information is available for the entire itinerary. [Get Metro Area Info API](https://aka.ms/AzureMapsMobilityMetroAreaInfo) can be requested to confirm if fare information is available in the metro area. </param>
        internal ItineraryResult(string itineraryId, DateTimeOffset? departureTime, DateTimeOffset? arrivalTime, int? travelTimeInSeconds, int? numberOfLegs, IReadOnlyList<RouteItineraryLeg> legs, ItineraryFare itineraryFare)
        {
            ItineraryId = itineraryId;
            DepartureTime = departureTime;
            ArrivalTime = arrivalTime;
            TravelTimeInSeconds = travelTimeInSeconds;
            NumberOfLegs = numberOfLegs;
            Legs = legs;
            ItineraryFare = itineraryFare;
        }

        /// <summary> A unique identifier of the returned itinerary. </summary>
        public string ItineraryId { get; }
        /// <summary> The date and time of departure from the origin point in ISO 8601 format, e.g. 1996-12-19T16:39:57-08:00. </summary>
        public DateTimeOffset? DepartureTime { get; }
        /// <summary> The date and time of arrival at the destination point in ISO 8601 format, e.g. 1996-12-19T19:39:57-08:00. </summary>
        public DateTimeOffset? ArrivalTime { get; }
        /// <summary> Estimated travel time in seconds. </summary>
        public int? TravelTimeInSeconds { get; }
        /// <summary> Number of legs. </summary>
        public int? NumberOfLegs { get; }
        /// <summary> An array summarizing the legs of this itinerary. </summary>
        public IReadOnlyList<RouteItineraryLeg> Legs { get; }
        /// <summary> Itinerary level transit fare information. Returned only if fare information is available for the entire itinerary. [Get Metro Area Info API](https://aka.ms/AzureMapsMobilityMetroAreaInfo) can be requested to confirm if fare information is available in the metro area. </summary>
        public ItineraryFare ItineraryFare { get; }
    }
}
