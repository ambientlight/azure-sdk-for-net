// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Mobility.Models
{
    public partial class TransitLineInfoResponse
    {
        internal static TransitLineInfoResponse DeserializeTransitLineInfoResponse(JsonElement element)
        {
            Optional<ItineraryLineGroup> lineGroup = default;
            Optional<IReadOnlyList<ItineraryLine>> lines = default;
            Optional<IReadOnlyList<LegStop>> stops = default;
            Optional<IReadOnlyList<ItineraryPattern>> patterns = default;
            Optional<LineArrival> schedule = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lineGroup"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    lineGroup = ItineraryLineGroup.DeserializeItineraryLineGroup(property.Value);
                    continue;
                }
                if (property.NameEquals("lines"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ItineraryLine> array = new List<ItineraryLine>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ItineraryLine.DeserializeItineraryLine(item));
                    }
                    lines = array;
                    continue;
                }
                if (property.NameEquals("stops"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<LegStop> array = new List<LegStop>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(LegStop.DeserializeLegStop(item));
                    }
                    stops = array;
                    continue;
                }
                if (property.NameEquals("patterns"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<ItineraryPattern> array = new List<ItineraryPattern>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(ItineraryPattern.DeserializeItineraryPattern(item));
                    }
                    patterns = array;
                    continue;
                }
                if (property.NameEquals("schedule"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    schedule = LineArrival.DeserializeLineArrival(property.Value);
                    continue;
                }
            }
            return new TransitLineInfoResponse(lineGroup.Value, Optional.ToList(lines), Optional.ToList(stops), Optional.ToList(patterns), schedule.Value);
        }
    }
}
