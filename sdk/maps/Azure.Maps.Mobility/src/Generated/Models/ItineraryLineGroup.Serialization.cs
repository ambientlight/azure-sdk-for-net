// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Mobility.Models
{
    public partial class ItineraryLineGroup
    {
        internal static ItineraryLineGroup DeserializeItineraryLineGroup(JsonElement element)
        {
            Optional<string> lineGroupId = default;
            Optional<string> agencyId = default;
            Optional<string> agencyName = default;
            Optional<string> lineNumber = default;
            Optional<string> caption1 = default;
            Optional<string> caption2 = default;
            Optional<string> color = default;
            Optional<TransitType> transitType = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("lineGroupId"))
                {
                    lineGroupId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("agencyId"))
                {
                    agencyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("agencyName"))
                {
                    agencyName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("lineNumber"))
                {
                    lineNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("caption1"))
                {
                    caption1 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("caption2"))
                {
                    caption2 = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("color"))
                {
                    color = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("transitType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    transitType = new TransitType(property.Value.GetString());
                    continue;
                }
            }
            return new ItineraryLineGroup(lineGroupId.Value, agencyId.Value, agencyName.Value, lineNumber.Value, caption1.Value, caption2.Value, color.Value, Optional.ToNullable(transitType));
        }
    }
}
