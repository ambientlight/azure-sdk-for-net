// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Mobility.Models
{
    public partial class RealTimeArrivalResult
    {
        internal static RealTimeArrivalResult DeserializeRealTimeArrivalResult(JsonElement element)
        {
            Optional<int> arrivalMinutes = default;
            Optional<ScheduleType> scheduleType = default;
            Optional<string> patternId = default;
            Optional<ItineraryLine> line = default;
            Optional<LegStop> stop = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("arrivalMinutes"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    arrivalMinutes = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("scheduleType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    scheduleType = new ScheduleType(property.Value.GetString());
                    continue;
                }
                if (property.NameEquals("patternId"))
                {
                    patternId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("line"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    line = ItineraryLine.DeserializeItineraryLine(property.Value);
                    continue;
                }
                if (property.NameEquals("stop"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    stop = LegStop.DeserializeLegStop(property.Value);
                    continue;
                }
            }
            return new RealTimeArrivalResult(Optional.ToNullable(arrivalMinutes), Optional.ToNullable(scheduleType), patternId.Value, line.Value, stop.Value);
        }
    }
}
