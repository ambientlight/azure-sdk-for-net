// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace Azure.Maps.Mobility.Models
{
    /// <summary> The LineArrival. </summary>
    public partial class LineArrival
    {
        /// <summary> Initializes a new instance of LineArrival. </summary>
        internal LineArrival()
        {
        }

        /// <summary> Initializes a new instance of LineArrival. </summary>
        /// <param name="lineId"> Line Id. </param>
        /// <param name="stopId"> The unique Azure Maps identifier for the respective public transit stop. When referring to public transit stops over time, it is recommended to use `stopId` since it will not change, as long as the physical stop exists. </param>
        /// <param name="scheduleTime"> The date and time of departure from the stop in ISO 8601 format, e.g. 1996-12-19T19:39:57-08:00. </param>
        /// <param name="scheduleType"> Whether the result is based on real-time or static data. </param>
        internal LineArrival(string lineId, string stopId, DateTimeOffset? scheduleTime, ScheduleType? scheduleType)
        {
            LineId = lineId;
            StopId = stopId;
            ScheduleTime = scheduleTime;
            ScheduleType = scheduleType;
        }

        /// <summary> Line Id. </summary>
        public string LineId { get; }
        /// <summary> The unique Azure Maps identifier for the respective public transit stop. When referring to public transit stops over time, it is recommended to use `stopId` since it will not change, as long as the physical stop exists. </summary>
        public string StopId { get; }
        /// <summary> The date and time of departure from the stop in ISO 8601 format, e.g. 1996-12-19T19:39:57-08:00. </summary>
        public DateTimeOffset? ScheduleTime { get; }
        /// <summary> Whether the result is based on real-time or static data. </summary>
        public ScheduleType? ScheduleType { get; }
    }
}
