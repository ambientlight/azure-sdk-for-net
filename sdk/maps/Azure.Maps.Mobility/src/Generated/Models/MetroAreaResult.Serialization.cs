// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Maps.Mobility.Models
{
    public partial class MetroAreaResult
    {
        internal static MetroAreaResult DeserializeMetroAreaResult(JsonElement element)
        {
            Optional<int> metroId = default;
            Optional<string> metroName = default;
            Optional<GeoJsonPolygon> geometry = default;
            Optional<ResultViewport> viewport = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("metroId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    metroId = property.Value.GetInt32();
                    continue;
                }
                if (property.NameEquals("metroName"))
                {
                    metroName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("geometry"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    geometry = GeoJsonPolygon.DeserializeGeoJsonPolygon(property.Value);
                    continue;
                }
                if (property.NameEquals("viewport"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    viewport = ResultViewport.DeserializeResultViewport(property.Value);
                    continue;
                }
            }
            return new MetroAreaResult(Optional.ToNullable(metroId), metroName.Value, geometry.Value, viewport.Value);
        }
    }
}
